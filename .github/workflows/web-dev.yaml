name: JuiceSwap Web DEV CI/CD

on:
  push:
    branches: [develop]
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - 'yarn.lock'
      - 'package.json'
  workflow_dispatch:

env:
  AZURE_ACCOUNT_NAME: 'stjswappdev'
  AZURE_CDN_PROFILE: 'afd-dfx-api-dev'
  AZURE_CDN_ENDPOINT: 'fde-jsw-swp-dev'
  AZURE_RESOURCE_GROUP: 'rg-dfx-api-dev'

jobs:
  build-and-deploy:
    name: Build and deploy Web App to DEV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.13.1'
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build web app
        run: |
          echo "Starting build process..."
          yarn workspace @juiceswap/interface build:production
          echo "Build completed"
        env:
          NODE_ENV: production

      - name: Verify build output
        run: |
          echo "Checking build directory..."
          if [ -d "./apps/web/build" ]; then
            echo "Build directory exists"
            echo "Contents of build directory:"
            ls -la ./apps/web/build/ | head -20
            echo "Total files in build:"
            find ./apps/web/build -type f | wc -l
          else
            echo "ERROR: Build directory does not exist!"
            echo "Checking for alternative build paths:"
            find ./apps/web -type d -name "build" -o -name "dist" | head -10
            exit 1
          fi

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_DEV_CREDENTIALS }}

      - name: Test Azure connection
        run: |
          echo "Testing Azure CLI connection..."
          az account show || echo "Azure login failed"

      - name: Upload to Azure Storage
        uses: azure/CLI@v2
        with:
          inlineScript: |
            echo "Starting Azure upload..."
            echo "Storage Account: ${{ env.AZURE_ACCOUNT_NAME }}"
            echo "Source: ./apps/web/build"
            az storage blob upload-batch --account-name ${{ env.AZURE_ACCOUNT_NAME }} -d '$web' -s ./apps/web/build --overwrite || {
              echo "Upload failed!"
              echo "Checking storage account access..."
              az storage account show --name ${{ env.AZURE_ACCOUNT_NAME }} || echo "Cannot access storage account"
              exit 1
            }
            echo "Upload completed successfully"