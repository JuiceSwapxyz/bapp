name: CI

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

# Cancel any previous runs for the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup & Cache
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-keys.outputs.cache-key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
          
      - name: Generate cache key
        id: cache-keys
        run: |
          echo "cache-key=deps-${{ hashFiles('**/yarn.lock', '**/package.json') }}" >> $GITHUB_OUTPUT
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            */node_modules
            ~/.cache/yarn
            **/dist
            **/build
            packages/uniswap/src/data/graphql/**/__generated__
            packages/uniswap/src/data/tradingApi/__generated__
          key: ${{ steps.cache-keys.outputs.cache-key }}
          restore-keys: |
            deps-
            
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          yarn install --immutable
          echo "Dependencies installed successfully"
        
      - name: Generate GraphQL and Trading API types
        run: |
          echo "Attempting to generate GraphQL and Trading API types..."
          # Trading API generation (less likely to fail)
          if yarn workspace uniswap tradingapi:generate; then
            echo "‚úÖ Trading API generation successful"
          else
            echo "‚ö†Ô∏è Trading API generation failed, continuing..."
          fi
          
          # GraphQL generation (may fail if API is down)  
          if yarn workspace uniswap graphql:generate; then
            echo "‚úÖ GraphQL generation successful"
          else
            echo "‚ö†Ô∏è GraphQL generation failed, checking for existing types..."
            if [ -d "packages/uniswap/src/data/graphql" ]; then
              echo "üìÅ Existing GraphQL types found, continuing with cached version"
            else
              echo "‚ùå No GraphQL types available - this may cause test failures"
            fi
          fi
          
      - name: Build essential packages
        run: |
          yarn workspace uniswap build
          yarn workspace utilities build

  lint-and-typecheck:
    name: Lint & TypeCheck
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
          
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            */node_modules
            ~/.cache/yarn
            **/dist
            **/build
            packages/uniswap/src/data/graphql/**/__generated__
            packages/uniswap/src/data/tradingApi/__generated__
          key: ${{ needs.setup.outputs.cache-key }}
          
      - name: Lint & TypeCheck
        run: |
          yarn g:lint --max-warnings=0 &
          yarn g:typecheck &
          wait

  test-matrix:
    name: Tests (${{ matrix.chunk.name }})
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        chunk:
          - { name: "Components", cmd: "set1", timeout: 10 }
          - { name: "Pages & State", cmd: "set2", timeout: 8 }
          - { name: "Hooks & Utils", cmd: "set3", timeout: 9 }
          - { name: "Integration", cmd: "set4", timeout: 7 }
    timeout-minutes: ${{ matrix.chunk.timeout }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
          
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            */node_modules
            ~/.cache/yarn
            **/dist
            **/build
            packages/uniswap/src/data/graphql/**/__generated__
            packages/uniswap/src/data/tradingApi/__generated__
          key: ${{ needs.setup.outputs.cache-key }}
          
      - name: Generate types if missing
        run: |
          if [ ! -d "packages/uniswap/src/data/graphql/__generated__" ] || [ ! -d "packages/uniswap/src/data/tradingApi/__generated__" ]; then
            echo "Generated files missing, attempting regeneration..."
            yarn workspace uniswap tradingapi:generate || echo "Trading API generation failed"
            yarn workspace uniswap graphql:generate || echo "GraphQL generation failed"
          else
            echo "Generated files found in cache"
          fi
          
      - name: Run Tests - ${{ matrix.chunk.name }}
        env:
          CI: true
          NODE_OPTIONS: "--max-old-space-size=4096 --max-semi-space-size=512"
        run: yarn workspace @uniswap/interface test:${{ matrix.chunk.cmd }}

  test-extension:
    name: Extension Tests
    runs-on: ubuntu-latest
    needs: setup
    timeout-minutes: 8
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
          
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            */node_modules
            ~/.cache/yarn
            **/dist
            **/build
            packages/uniswap/src/data/graphql/**/__generated__
            packages/uniswap/src/data/tradingApi/__generated__
          key: ${{ needs.setup.outputs.cache-key }}
          
      - name: Generate types if missing
        run: |
          if [ ! -d "packages/uniswap/src/data/graphql/__generated__" ] || [ ! -d "packages/uniswap/src/data/tradingApi/__generated__" ]; then
            echo "Generated files missing, attempting regeneration..."
            yarn workspace uniswap tradingapi:generate || echo "Trading API generation failed"
            yarn workspace uniswap graphql:generate || echo "GraphQL generation failed"
          else
            echo "Generated files found in cache"
          fi
          
      - name: Run Extension Tests
        env:
          CI: true
          NODE_OPTIONS: "--max-old-space-size=3072"
        run: yarn workspace @uniswap/extension test

  test-packages:
    name: Core Packages
    runs-on: ubuntu-latest  
    needs: setup
    timeout-minutes: 6
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
          
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            */node_modules
            ~/.cache/yarn
            **/dist
            **/build
            packages/uniswap/src/data/graphql/**/__generated__
            packages/uniswap/src/data/tradingApi/__generated__
          key: ${{ needs.setup.outputs.cache-key }}
          
      - name: Generate types if missing
        run: |
          if [ ! -d "packages/uniswap/src/data/graphql/__generated__" ] || [ ! -d "packages/uniswap/src/data/tradingApi/__generated__" ]; then
            echo "Generated files missing, attempting regeneration..."
            yarn workspace uniswap tradingapi:generate || echo "Trading API generation failed"
            yarn workspace uniswap graphql:generate || echo "GraphQL generation failed"
          else
            echo "Generated files found in cache"
          fi
          
      - name: Run Package Tests
        env:
          CI: true
          NODE_OPTIONS: "--max-old-space-size=2048"
        run: |
          yarn workspace uniswap test &
          yarn workspace utilities test &
          yarn workspace ui test &
          wait

  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test-matrix, test-extension, test-packages]
    if: always()
    steps:
      - name: Check Results
        run: |
          if [[ "${{ needs.lint-and-typecheck.result }}" == "success" && 
                "${{ needs.test-matrix.result }}" == "success" && 
                "${{ needs.test-extension.result }}" == "success" && 
                "${{ needs.test-packages.result }}" == "success" ]]; then
            echo "All tests passed!"
            exit 0
          else
            echo "Some tests failed"
            exit 1
          fi